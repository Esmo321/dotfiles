#! /usr/bin/dash

# Show application launcher
super + d
	$MODULES/ui/rofi

# Show all running windows
super + grave
	$MODULES/ui/rofi files

# Switch to last node / desktop
{alt, super} + @Tab
	bspc {node,desktop} --focus last

# Quit bspwm
super + shift + e : Return
	bspc quit 1

# Reload config
super + alt + r
	if $WMRC reload; then \
		$MODULES/ui/notify info "wmrc" "Desktop configuration reloaded successfully."; \
	else \
		$MODULES/ui/notify warn "wmrc" "An error occurred while reloading desktop configuration.\n$ERR"; \
	fi

# Close application
super + shift + q
	bspc node -c

# Kill application
super + ctrl + shift + q
	bspc node -k

# Change desktop on current monitor
super + {1-9}
	bspc desktop -f {1-9}.local

# Move through neighbouring desktops on current monitor
super + {@Home,@End}
	bspc desktop -f {prev,next}.local

# Move focused window to desktop on current monitor
super + shift + {1-9}
	bspc node -d {1-9}.local -f

# Move focused window to neighbouring desktop on current monitor
super + shift + {@Home,@End}
	bspc node -d {prev,next}.local -f

# Toggle monocle mode for focused window
super + f 
	bspc desktop -l next

# Toggle fullscreen mode for focused window
super + shift + f 
	bspc node -t ~fullscreen

# Select parent node
super + @F1
	bspc node -f @parent

# Move selected nodes
super + @F2
	$MODULES/ui/bspwm move_node
	
# Swap desktops
super + @F3
	$MODULES/ui/bspwm swap_desktop
	
# Swap monitors
super + @F4
	$MODULES/ui/bspwm swap_monitor

# Change window tiling mode
super + shift + @space
	if [ "$(bspc query -N -n focused.floating)" ]; then \
		bspc node focused -t pseudo_tiled; \
	elif [ "$(bspc query -N -n focused.tiled)" ]; then \
		bspc node focused -t floating; \
	else \
		bspc node focused -t tiled; \
	fi

# Select window if tiled
super + {@Up,@Down,@Left,@Right}
	if [ -z "$(bspc query -N -n focused.floating)" ]; then \
		bspc node -f {north,south,west,east}; \
	fi

# Move window if tiling
super + shift + {@Up,@Down,@Left,@Right}
	if [ -z "$(bspc query -N -n focused.floating)" ]; then \
		node=$(bspc query -N -n); \
		bspc node -s {north,south,west,east}; \
		bspc node -f ${node}; \
	fi

# Move window if floating
super + {Up,Down,Left,Right}
	if [ "$(bspc query -N -n focused.floating)" ]; then \
		bspc node -v {0 -10,0 10,-10 0,10 0}; \
	fi

# Resize window (Up)
super + alt + @Up
	if [ "$(bspc query -N -n focused.tiled)" ]; then \
		bspc node @north -r -10; \
		bspc node @south -r -10; \
	else \
		bspc node -z bottom 0 -20; \
	fi

# Resize window (Down)
super + alt + @Down
	if [ "$(bspc query -N -n focused.tiled)" ]; then \
		bspc node @north -r +10; \
		bspc node @south -r +10; \
	else \
		bspc node -z bottom 0 +20; \
	fi

# Resize window (Left)
super + alt + @Left
	if [ "$(bspc query -N -n focused.tiled)" ]; then \
		bspc node @east -r -10; \
		bspc node @west -r -10; \
	else \
		bspc node -z right -10 0; \
	fi

# Resize window (Right)
super + alt + @Right
	if [ "$(bspc query -N -n focused.tiled)" ]; then \
		bspc node @east -r +10; \
		bspc node @west -r +10; \
	else \
		bspc node -z right +10 0; \
	fi

# Preselect
super + ctrl + {@Up,@Down,@Left,@Right}
 	bspc node -p {north,south,west,east}

# Cancel preselect
super + Escape
	bspc node -p cancel

# Rotate current leaf
super + r
	bspc node @parent -R 90

# Rotate current display
super + shift + r
	bspc node @/ -R 90

# Swap places of current and last focused window
super + w
	bspc node -s last

# Turn on gaps for current desktop
super + bracketright
	bspc config -d focused window_gap 15; \
	bspc config -d focused border_width 2

# Turn off gaps for current desktop
super + bracketleft
	bspc config -d focused window_gap 0; \
	bspc config -d focused border_width 1

# Change volume using standard keys for all sinks
super + {Prior, Next}
	for sink in `pactl list sinks | grep -E "Sink \#[0-9]+" | sed -r 's/Sink \#//g'`; do \
	   pactl set-sink-volume $sink {+,-}2%; \
	done

# Change volume using media keys for all sinks
{XF86AudioRaiseVolume,XF86AudioLowerVolume}
	for sink in `pactl list sinks | grep -E "Sink \#[0-9]+" | sed -r 's/Sink \#//g'`; do \
	   pactl set-sink-volume $sink {+,-}2%; \
	done

# Toggle volume using standard keys for all sinks
super + Insert
	pactl list sinks | grep -q Mute:.no && pactl set-sink-mute 0 1 || pactl set-sink-mute 0 0

# Toggle volume using media keys for all sinks
XF86AudioMute
	pactl list sinks | grep -q Mute:.no && pactl set-sink-mute 0 1 || pactl set-sink-mute 0 0

# Change brightness using media keys
super + {XF86AudioLowerVolume,XF86AudioRaiseVolume}
	$MODULES/screen/backlight {dec,inc} 20

# Set brightess to low / high using media keys
ctrl + {XF86AudioLowerVolume,XF86AudioRaiseVolume}
	$MODULES/screen/backlight equ {0,100}

# Select monitor layout
super + {o, XF86AudioMicMute}
	$MODULES/screen/layout

# Launch Pulseaudio control interface
super + XF86AudioMute
	pavucontrol

# Toggle mute microphone
XF86AudioMicMute
	amixer set Capture toggle

# Sleep
super + @Delete
	systemctl suspend

# Shut down
super + shift + @Delete : Return
	systemctl poweroff

# Reboot
super + shift + ctrl + @Delete : Return
	systemctl reboot

# Lock the device using physlock
XF86Launch1
	physlock -m -d

# Lock screen and turn off screen
super + l
	$WMRC lock

# Hardened mode (hide polybar and notifications)
# super + h
# 	$MODULES/interface/hardened_toggle

# Launch terminal
super + Return
	$TERMINAL

# Launch terminal as root
super + shift + Return
	$TERMINAL -e sudo /usr/bin/fish

# Launch scratchpad terminal
super + BackSpace
	$TERMINAL -e tmux new-session -A -s scratchpad

# Launch Firefox
super + b
	firefox

# Firefox fix
super + q
	true

# Launch Firefox in private mode
super + shift + b
	firefox -private-window

# Launch PCManFM file manager
super + n
	$FILEMGR

# Launch PCManFM file manager as root
super + shift + n
	sudo $FILEMGR

# Launch Visual Studio Code
super + v
	code

# Launch KeePassXC
super + k
	keepassxc

# Launch Sublime Text 3
super + s
	subl3

# Show character menu
super + z
	$MODULES/ui/rofi character

# Show calculator
super + @less
	$MODULES/ui/rofi calc

# Print screen
super + p
	mkdir -p $HOME/Pictures/Screenshots/; \
	flameshot gui -p $HOME/Pictures/Screenshots/